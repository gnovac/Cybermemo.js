"use strict";function _createForOfIteratorHelper(e,t){var r,a="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!a){if(Array.isArray(e)||(a=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return a&&(e=a),r=0,{s:t=function(){},n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var n,o=!0,s=!1;return{s:function(){a=a.call(e)},n:function(){var e=a.next();return o=e.done,e},e:function(e){s=!0,n=e},f:function(){try{o||null==a.return||a.return()}finally{if(s)throw n}}}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(r="Object"===r&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,a=new Array(t);r<t;r++)a[r]=e[r];return a}var games=["Detroit: Become Human","The Ascent","Shadowrun Returns","Cyberpunk 2077","Ghostrunner","Deus Ex","Ruiner","Observer","Detroit: Become Human","The Ascent","Shadowrun Returns","Cyberpunk 2077","Ghostrunner","Deus Ex","Ruiner","Observer"],movies=["Blade Runner","The Matrix","RoboCop","Altered Carbon","The Fifth Element","Ghost In The Shell","Total Recall","Black Mirror","Blade Runner","The Matrix","RoboCop","Altered Carbon","The Fifth Element","Ghost In The Shell","Total Recall","Black Mirror"],series=["Neuromancer","The Book of Strange New Things","When Gravity Fails","Data Runner","Slant","Van","The Windup Girl","Snow Crash","Neuromancer","The Book of Strange New Things","When Gravity Fails","Data Runner","Slant","Van","The Windup Girl","Snow Crash"],startModal=document.querySelector(".start-modal"),selectDeckBox=document.querySelector(".start-modal__select-box"),playBtn=document.querySelector(".start-modal__play-btn"),selectedDeck=document.querySelector(".selected"),moves=document.querySelector(".moves-display"),timer=document.querySelector(".time-display"),stars=document.querySelectorAll(".fa-star"),resetBtn=document.querySelector(".game-panel__reset-btn"),cards=document.getElementsByClassName("deck__card"),cardsArr=_toConsumableArray(cards),deck=document.querySelector(".deck"),matchedCards=document.getElementsByClassName("matched"),openedCards=document.getElementsByClassName("open"),scoreBox=document.querySelector(".score-panel__score-box"),bestTimesList=document.querySelector(".score-panel__scores-display"),winModal=document.querySelector(".win-modal"),winModalScore=document.querySelector(".win-modal__score"),winModalStars=document.querySelector(".win-modal__stars"),winModalYesBtn=document.querySelector(".win-modal__yes-btn"),winModalNoBtn=document.querySelector(".win-modal__no-btn"),openedCardsArr=[],results=[],timeCounter=0,countTime=null,movesCounter=0,starCounter=0,storageAvailable=!1,deckItems=games,selectDeck=function(e){e.target.classList.contains("start-modal__deck-cat")&&(selectedDeck.classList.remove("selected"),(selectedDeck=e.target).classList.add("selected")),e.target.classList.contains("games")&&(deckItems=games),e.target.classList.contains("movies")&&(deckItems=movies),e.target.classList.contains("series")&&(deckItems=series)},addTimes=function(){var e=prompt("You got a highscore! Enter name:"),e={timeCounter:timeCounter,name:e};results.push(e),results.sort(function(e,t){return e.timeCounter-t.timeCounter}),localStorage.setItem("times",JSON.stringify(results))},showHighTimes=function(){var e=null!=(e=JSON.parse(localStorage.getItem("times")))?e:[];bestTimesList.innerHTML=e.map(function(e){return"<li>".concat(e.name," - ").concat(e.timeCounter," sec</li>")}).slice(0,5).join("")},shuffle=function(e){for(var t=e.length-1;0<t;t--){var r=Math.floor(Math.random()*(t+1)),a=e[t];e[t]=e[r],e[r]=a}return e},loadDeck=function(){shuffle(deckItems);for(var e=0;e<cardsArr.length;e++)cardsArr[e].innerHTML=deckItems[e]},startTimer=function(){timeCounter++,timer.textContent=timeCounter},incrementMoves=function(){movesCounter++,moves.textContent=movesCounter,decrementStars()},decrementStars=function(){16===movesCounter?(stars[2].classList.remove("fas"),stars[2].classList.add("far"),starCounter--):24===movesCounter&&(stars[1].classList.remove("fas"),stars[1].classList.add("far"),starCounter--)},disableCards=function(){Array.prototype.filter.call(cards,function(e){e.classList.add("disabled")})},enableCards=function(){Array.prototype.filter.call(cards,function(e){e.classList.remove("disabled");for(var t=0;t<matchedCards.length;t++)matchedCards[t].classList.add("disabled")})},startGame=function(e){if(e.target.classList.contains("deck__card")&&!e.target.classList.contains("open")&&!e.target.classList.contains("matched")&&(e.target.classList.add("open"),e.target.classList.add("show"),openedCardsArr.push(e.target),2===openedCardsArr.length))if(incrementMoves(),openedCardsArr[0].innerHTML===openedCardsArr[1].innerHTML){var t,r=_createForOfIteratorHelper(openedCardsArr);try{for(r.s();!(t=r.n()).done;)t.value.classList.add("matched")}catch(e){r.e(e)}finally{r.f()}matchedCards.length===cardsArr.length&&completeGame(),openedCardsArr=[]}else disableCards(),setTimeout(function(){var e,t=_createForOfIteratorHelper(openedCardsArr);try{for(t.s();!(e=t.n()).done;){var r=e.value;r.classList.remove("open"),r.classList.remove("show")}}catch(e){t.e(e)}finally{t.f()}enableCards(),openedCardsArr=[]},1500);countTime=countTime||setInterval(startTimer,1e3)},resetGame=function(){for(;openedCards.length;)openedCards[0].classList.remove("open","show","matched","disabled");openedCardsArr=[],movesCounter=0,moves.textContent=movesCounter,clearInterval(countTime),countTime=null,timeCounter=0,timer.textContent=timeCounter;for(var e=0;e<stars.length;e++)stars[e].classList.remove("far"),stars[e].classList.add("fas");resetBtn.classList.remove("disabled"),startModal.classList.add("show-start-modal"),winModal.classList.remove("show-win-modal"),scoreBox.classList.remove("show")},completeGame=function(){clearInterval(countTime),addTimes(),showHighTimes(),winModal.classList.add("show-win-modal"),winModalScore.textContent="".concat(timeCounter," seconds & ").concat(movesCounter," moves.");for(var e=0;e<stars.length;e++){var t=stars[e].cloneNode(!0);winModalStars.appendChild(t)}resetBtn.classList.add("disabled")},closeStartModal=function(){startModal.classList.remove("show-start-modal"),loadDeck(),scoreBox.classList.add("show"),showHighTimes(),winModalStars.innerHTML=""},closeWinModal=function(){winModal.classList.remove("show-win-modal"),resetBtn.classList.remove("disabled")};selectDeckBox.addEventListener("click",selectDeck),playBtn.addEventListener("click",closeStartModal),deck.addEventListener("click",startGame),resetBtn.addEventListener("click",resetGame),winModalYesBtn.addEventListener("click",resetGame),winModalNoBtn.addEventListener("click",closeWinModal);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
